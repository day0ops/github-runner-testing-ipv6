name: Kubernetes Tests
on: push

env:
  VERSION: "1.0.0-ci1"
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  prepare_env:
    name: Prepare Environment
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    outputs:
      should-auto-succeed-kube-tests: ${{ steps.run-strategy.outputs.auto_succeed }}
    steps:
      - id: checkout-code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

  end_to_end_tests:
    name: End-to-End (${{ matrix.test.cluster-name }})
    needs: prepare_env
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        test:
          # v6 related
          - cluster-name: "cluster-eight"
            supported-ip-family: "v6"
            go-test-args: "-v -timeout=25m"
            go-test-run-regex: "^TestGlooGatewayEdgeV6Gateway$$"

        # In our PR tests, we run the suite of tests using the upper ends of versions that we claim to support
        # The versions should mirror: https://docs.solo.io/gloo-edge/latest/reference/support/
        version-files:
          - file: "./.github/workflows/.env/pr-tests/versions.env"

    steps:
      - id: auto-succeed-tests
        run: |
          echo "Regression tests auto-succeeded"
      - uses: actions/checkout@v4
      - name: Dotenv Action
        uses: falti/dotenv-action@v1.1.4
        id: dotenv
        with:
          path: ${{ matrix.version-files.file }}
          log-variables: true
      - id: setup-kind-cluster
        name: Setup KinD Cluster
        uses: ./.github/workflows/composite-actions/setup-kind-cluster
        with:
          cluster-name: ${{ matrix.test.cluster-name }}
          kind-node-version: ${{ steps.dotenv.outputs.node_version }}
          kind-version: ${{ steps.dotenv.outputs.kind_version }}
          kubectl-version: ${{ steps.dotenv.outputs.kubectl_version }}
          helm-version: ${{ steps.dotenv.outputs.helm_version }}
          istio-version: ${{ steps.dotenv.outputs.istio_version }}
          supported-ip-family: ${{ matrix.test.supported-ip-family}}

      - id: go-build
        name: Go Build
        shell: bash
        run: |
          set -euo pipefail
          echo "Building Gloo Edge..."
          make build-images load-images deploy test
          echo "Build complete."
