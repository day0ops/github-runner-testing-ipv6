// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.6.1
// source: proto/ping.proto

package simple_ping_pong_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_proto_ping_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ping_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_proto_ping_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Message        string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	ServerHostname string                 `protobuf:"bytes,2,opt,name=server_hostname,json=serverHostname,proto3" json:"server_hostname,omitempty"`
	ServerIp       string                 `protobuf:"bytes,3,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`
	Timestamp      int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_proto_ping_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ping_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_proto_ping_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PingResponse) GetServerHostname() string {
	if x != nil {
		return x.ServerHostname
	}
	return ""
}

func (x *PingResponse) GetServerIp() string {
	if x != nil {
		return x.ServerIp
	}
	return ""
}

func (x *PingResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type HostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostRequest) Reset() {
	*x = HostRequest{}
	mi := &file_proto_ping_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostRequest) ProtoMessage() {}

func (x *HostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ping_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostRequest.ProtoReflect.Descriptor instead.
func (*HostRequest) Descriptor() ([]byte, []int) {
	return file_proto_ping_proto_rawDescGZIP(), []int{2}
}

type HostResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddress     string                 `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	DnsServers    []string               `protobuf:"bytes,3,rep,name=dns_servers,json=dnsServers,proto3" json:"dns_servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostResponse) Reset() {
	*x = HostResponse{}
	mi := &file_proto_ping_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostResponse) ProtoMessage() {}

func (x *HostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ping_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostResponse.ProtoReflect.Descriptor instead.
func (*HostResponse) Descriptor() ([]byte, []int) {
	return file_proto_ping_proto_rawDescGZIP(), []int{3}
}

func (x *HostResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostResponse) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *HostResponse) GetDnsServers() []string {
	if x != nil {
		return x.DnsServers
	}
	return nil
}

var File_proto_ping_proto protoreflect.FileDescriptor

const file_proto_ping_proto_rawDesc = "" +
	"\n" +
	"\x10proto/ping.proto\x12\x04ping\"'\n" +
	"\vPingRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x8c\x01\n" +
	"\fPingResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12'\n" +
	"\x0fserver_hostname\x18\x02 \x01(\tR\x0eserverHostname\x12\x1b\n" +
	"\tserver_ip\x18\x03 \x01(\tR\bserverIp\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"\r\n" +
	"\vHostRequest\"j\n" +
	"\fHostResponse\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x1f\n" +
	"\vdns_servers\x18\x03 \x03(\tR\n" +
	"dnsServers2r\n" +
	"\vTestService\x12-\n" +
	"\x04Ping\x12\x11.ping.PingRequest\x1a\x12.ping.PingResponse\x124\n" +
	"\vGetHostInfo\x12\x11.ping.HostRequest\x1a\x12.ping.HostResponseB*Z(github.com/day0ops/simple-ping-pong-grpcb\x06proto3"

var (
	file_proto_ping_proto_rawDescOnce sync.Once
	file_proto_ping_proto_rawDescData []byte
)

func file_proto_ping_proto_rawDescGZIP() []byte {
	file_proto_ping_proto_rawDescOnce.Do(func() {
		file_proto_ping_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_ping_proto_rawDesc), len(file_proto_ping_proto_rawDesc)))
	})
	return file_proto_ping_proto_rawDescData
}

var file_proto_ping_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_ping_proto_goTypes = []any{
	(*PingRequest)(nil),  // 0: ping.PingRequest
	(*PingResponse)(nil), // 1: ping.PingResponse
	(*HostRequest)(nil),  // 2: ping.HostRequest
	(*HostResponse)(nil), // 3: ping.HostResponse
}
var file_proto_ping_proto_depIdxs = []int32{
	0, // 0: ping.TestService.Ping:input_type -> ping.PingRequest
	2, // 1: ping.TestService.GetHostInfo:input_type -> ping.HostRequest
	1, // 2: ping.TestService.Ping:output_type -> ping.PingResponse
	3, // 3: ping.TestService.GetHostInfo:output_type -> ping.HostResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_ping_proto_init() }
func file_proto_ping_proto_init() {
	if File_proto_ping_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_ping_proto_rawDesc), len(file_proto_ping_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ping_proto_goTypes,
		DependencyIndexes: file_proto_ping_proto_depIdxs,
		MessageInfos:      file_proto_ping_proto_msgTypes,
	}.Build()
	File_proto_ping_proto = out.File
	file_proto_ping_proto_goTypes = nil
	file_proto_ping_proto_depIdxs = nil
}
